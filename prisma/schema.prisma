// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  mobileNo     String    @unique
  name         String
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  sentMessages     Messages[] @relation("SentMessage")
  receivedMessages Messages[] @relation("RecievedMessage")

  blocksMade       BlockedUsers[] @relation("Blocker") // users I blocked
  blocksReceived   BlockedUsers[] @relation("Blocked") // users who blocked me

  @@index([mobileNo])
}

model Messages {
  id          String   @id @default(cuid())
  content     String
  senderId    Int
  recipientId Int
  status      String   @default("SENT") // or use enum later
  createdAt   DateTime @default(now())

  sender     User @relation("SentMessage", fields: [senderId], references: [id])
  recipient  User @relation("RecievedMessage", fields: [recipientId], references: [id])
}

model BlockedUsers {
  id          String @id @default(cuid())

  blockerId   Int
  blockedId   Int

  blocker     User @relation("Blocker", fields: [blockerId], references: [id])
  blocked     User @relation("Blocked", fields: [blockedId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}